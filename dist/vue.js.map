{"version":3,"file":"vue.js","sources":["../src/compiler/parse.js","../src/compiler/index.js","../src/utils.js","../src/gloabAPI.js","../src/dep.js","../src/array.js","../src/observe.js","../src/watcher.js","../src/initState.js","../src/voom/index.js","../src/voom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`\r\nconst qnameCapture = `(('?:${ncname}\\\\:)?${ncname})`\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //匹配标签头比如<div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) //pi匹配标签尾比如</div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ //匹配属性的key和value，value有3种情况，\"\",'',没有引号\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g //匹配{{}}\r\nconst startTagclose = /^\\s*(\\/?)>/ //匹配<br/>这种\r\n\r\n// vue2用正则表达式，vue3不是\r\n\r\n//match匹配正则表达式返回了一个数组，里面有匹配到的结果\r\n\r\nexport function parseHTML(html) {\r\n\r\n  const ELEMENT_TYPE = 1//元素类\r\n  const TEXT_TYPE = 3//文本类\r\n  const stack = []//栈，存放元素\r\n  let currentParent;//指向栈的最后一个元素\r\n  let root;//根节点\r\n\r\n  //最终结果转化成抽象语法树\r\n\r\n  //AST语法树构建模仿算法题：找大括号的对称，一个‘{’匹配一个‘}’，遇到一个开始元素就入栈，遇到一个结尾元素就出栈，新的节点和文本以当前栈的最后一个元素，即栈顶作为父亲，出栈的时候栈顶就切换成上一个，正好对应了HTML元素对称的样式，所以和匹配{}的方式可以类同\r\n\r\n  //节点模板\r\n  function createASTElement(tag, attrs) {\r\n    return {\r\n      tag,\r\n      type: ELEMENT_TYPE,\r\n      children: [],\r\n      attrs,\r\n      parent: null\r\n    }\r\n  }\r\n\r\n  //如果匹配为开始标签的操作\r\n  function start(startTagMatch, attrs) {\r\n    let node = createASTElement(startTagMatch, attrs)//创造一个AST节点\r\n    if (!root) {\r\n      root = node//如果没有根那他就是根\r\n    }\r\n    if (currentParent) {//如果当前节点元素不是根节点，将该节点的父亲指向上一个元素\r\n      node.parent = currentParent\r\n      currentParent.children.push(node)//父亲指向该元素\r\n    }\r\n    stack.push(node)//入栈，作为栈最后一个元素\r\n    currentParent = node//指向该节点\r\n  }\r\n\r\n  //如果匹配为文本的操作\r\n  function texts(text) {\r\n    text = text.replace(/\\s/g, ' ')//删除空格，随便处理了，按理来说两个空格是要读取得\r\n    text && currentParent.children.push({//把该文本放到栈的最后一个节点元素，作为该元素的文本内容\r\n      type: TEXT_TYPE,\r\n      text,\r\n      parent: currentParent\r\n    })\r\n  }\r\n\r\n  //如果匹配为结束标签的操作\r\n  function end(endTagMatch) {\r\n    stack.pop();//出栈\r\n    currentParent = stack[stack.length - 1]\r\n  }\r\n\r\n  //截取\r\n  function advance(length) {\r\n    html = html.substring(length)\r\n  }\r\n\r\n  // 匹配标签开始\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen);\r\n    if (start) {//匹配到了\r\n      const match = {\r\n        tagName: start[1],//标签名\r\n        attrs: []\r\n      }\r\n      advance(start[0].length)//匹配完以后去截取html模板\r\n      \r\n      //匹配属性，如果不是标签结束，就一直匹配\r\n      let attr, end\r\n      while (!(end = html.match(startTagclose)) && (attr = html.match(attribute))) {//在循环判断的时候就赋值\r\n        advance(attr[0].length)//匹配完成以后删除\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })\r\n      }\r\n      if (end) {//把最后一个>删掉\r\n        advance(end[0].length)\r\n      }\r\n\r\n      return match//返回匹配结果对象\r\n    }\r\n\r\n    return false //没匹配上就不是\r\n  }\r\n\r\n  //循环匹配\r\n  while (html) {//逐个匹配template\r\n    // 如果textEnd=0那么一定是开始或者结束标签\r\n    // 如果textEnd>0那么一定是文本结束位置\r\n    let textEnd = html.indexOf('<')//如果indexOf是0，那么就是标签开始\r\n\r\n    // 如果是0，就去匹配一下是不是开始或者结束\r\n    if (textEnd == 0) {\r\n      let startTagMatch = parseStartTag();//匹配是不是开始标签结果\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue//匹配有结果就直接继续循环\r\n      }\r\n\r\n      //如果不是开始标签就是结束标签\r\n      let endTagMatch = html.match(endTag)//匹配是不是结束标签结果\r\n      if (endTagMatch) {\r\n        end(endTagMatch[1])\r\n        advance(endTagMatch[0].length)//匹配有结果就截掉后直接继续循环\r\n        continue\r\n      }\r\n    }\r\n\r\n    //截取文本内容\r\n    if (textEnd > 0) {\r\n      let text = html.substring(0, textEnd)//获取出文本内容\r\n      if (text) {\r\n        texts(text)\r\n        advance(text.length)//从原文截掉\r\n      }\r\n    }\r\n  }\r\n  return root\r\n}","import { parseHTML } from './parse'\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g //匹配{{}}\r\n\r\nfunction genProps(attrs) {\r\n  let str = ''\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if (attr.name === 'style') {\r\n      let obj = {}\r\n      attr.value.split(';').forEach((item) => {\r\n        item=item.trim()\r\n        let [key, value] = item.split(':')\r\n        obj[key] = value\r\n      })\r\n      attr.value = obj\r\n    }\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `{${str.slice(0, -1)}}`\r\n}\r\n\r\nfunction gen(node) {\r\n  if (node.type === 1) {\r\n    return codegen(node)\r\n  } else {\r\n    let text = node.text\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(${JSON.stringify(text)})`\r\n    } else {\r\n      let tokens = [];\r\n      let match\r\n      defaultTagRE.lastIndex = 0\r\n      let lastIndex = 0\r\n      while (match = defaultTagRE.exec(text)) {\r\n        let index = match.index\r\n\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n\r\n        tokens.push(`_s(${match[1].trim()})`)\r\n\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join('+')})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(children) {\r\n  return children.map((child) => gen(child)).join(',')\r\n}\r\n\r\nfunction codegen(ast) {\r\n  let children = genChildren(ast.children)\r\n  let code = `_c('${ast.tag}',${ast.attrs.length > 0 ? genProps(ast.attrs) : 'null'\r\n    }${ast.children.length ? `,${children}` : ''})`\r\n\r\n  return code\r\n}\r\n\r\nexport function compileToFunction(template) {\r\n  //template转换成ast语法树\r\n  let ast = parseHTML(template)\r\n\r\n  // console.log(ast)\r\n\r\n  //把ast语法树拼接成语法树代码，其实就是字符串\r\n  let code = codegen(ast)//恶心，不想看\r\n\r\n  //with方法可以让内部变量从this里取值，模板引擎实现原理就是with+new Function\r\n  code = `with(this){return ${code}}`\r\n\r\n  let render = new Function(code)//new Function把code变成可执行函数\r\n\r\n  return render\r\n}\r\n\r\n","//策略\r\nconst strats = {}\r\nconst LIFECYCLE = [\r\n  'beforeCreate',\r\n  'created'\r\n  //所有生命周期做成策略\r\n]\r\n//生成strats[create]这样的生命周期策略，还可以加computed之类的策略\r\nLIFECYCLE.forEach(hook => {\r\n  //1.{}+{created:function(){}}=>{created:[fn]}\r\n  //2.{created:[fn]}+{created:function(){}}=>{create:[fn,fn]}\r\n  strats[hook] = function (parent, child) {\r\n    if (child) {\r\n      if (parent) {//如果父子都不是空，父子拼在一次\r\n        return parent.concat(child)\r\n      } else {//如果是一开始，parent是空，直接是儿子\r\n        return [child]\r\n      }\r\n    } else {//如果子是空，直接继续用父亲\r\n      return parent\r\n    }\r\n  }\r\n})\r\n\r\n//制定一个合并策略\r\nstrats.components =function(parentVal,childVal){\r\n  const res=Object.create(parentVal)\r\n\r\n  if(childVal){//如果孩子存在，那就把孩子的属性拷贝到父亲，实现了孩子找不到，那就去父亲找\r\n    for(let key in childVal){\r\n      res[key]=childVal[key]\r\n    }\r\n  }\r\n\r\n  return res\r\n}\r\n//合并\r\nexport function mergeOpions(parent, child) {\r\n  const options = {}\r\n\r\n  for (let key in parent) {//循环旧options\r\n    mergeFild(key)\r\n  }\r\n\r\n  for (let key in child) {//循环新options\r\n    if (!parent.hasOwnProperty(key)) {//如果旧的已经有该属性，那就不用加了，只需要在旧的optionsmergeFild的时候选择新的options的该属性就行\r\n      mergeFild(key)\r\n    }\r\n  }\r\n\r\n  function mergeFild(key) {\r\n    if (typeof child[key] == 'function' && key==='data') {\r\n      child[key] = child[key]()\r\n    }//防止是data是函数形式\r\n\r\n    // 选择策略模式减少if-else\r\n    if (strats[key]) {\r\n      options[key] = strats[key](parent[key], child[key])\r\n    } else {\r\n      //不在策略里就直接以儿子为准\r\n      options[key] = child[key] || parent[key]//有儿用儿，无儿找爹\r\n    }\r\n  }\r\n\r\n  return options\r\n}","import { mergeOpions } from \"./utils\"\r\n\r\nexport function initGlobalAPI(Vue) {\r\n  //静态options\r\n  Vue.options = {\r\n    _base: Vue//把Vue放进去\r\n  }\r\n  //发布订阅功能\r\n  Vue.mixin = function (mixin) {\r\n    //把用户的选项合并到全局的options\r\n\r\n    //1.options和用户options合并\r\n    //2.合并过的options继续和用户options合并\r\n    this.options = mergeOpions(this.options, mixin)\r\n    return this\r\n  }\r\n\r\n  // 手动创造组件api\r\n  Vue.extend = function (options) {\r\n    //返回一个构造函数\r\n    function Sub(options = {}) {\r\n      this._init(options)\r\n    }\r\n    Sub.prototype = Object.create(Vue.prototype)//可以用Vue的init和$mount了\r\n    Sub.prototype.constructor = Sub//把constructor指回来\r\n\r\n    Sub.options = mergeOpions(Vue.options, options)//用户的选项和全局的合并\r\n    console.log(Sub.options)\r\n    return Sub\r\n  }\r\n\r\n  Vue.options.components = {\r\n\r\n  }//全局的指令\r\n  //手动创建全局组件\r\n  Vue.component = function (id, definition) {\r\n    definition = typeof definition === 'function' ? definition : Vue.extend(definition)//内部包装，如果传过来的不是extend(xxx)，就这里自动包装\r\n    Vue.options.components[id] = definition//存到里面\r\n    console.log(Vue.options)\r\n  }\r\n\r\n}\r\n\r\n","let id=0\r\n\r\nclass Dep{\r\n  constructor(){\r\n    this.id=id++//属性的dep要收集watcher\r\n    this.subs=[];//存放了当前属性对应的watcher有哪些\r\n  }\r\n  depend(){\r\n    Dep.target.addDep(this)//让watcher记录dep，因为是observe里的dep调用的depend，所以this指向observe里的dep\r\n  }\r\n  addSub(watcher){\r\n    this.subs.push(watcher)//dep收集watcher\r\n  }\r\n  notify(){\r\n    this.subs.forEach(watcher=>watcher.update())//告诉此dep相关的watcher更新\r\n  }\r\n}\r\nDep.target=null//创建一个静态的target，记录是哪个组件，及watcher\r\n\r\n//把dep记录watcher的行为变成栈\r\nlet stack=[]\r\nexport function pushTarget(watcher){\r\n  stack.push(watcher)\r\n  Dep.target=watcher\r\n}\r\nexport function popTarget(){\r\n  stack.pop()\r\n  Dep.target=stack[stack.length-1]\r\n}\r\nexport default Dep","//重写数组的部分方法\r\n\r\nlet oldArrayProte = Array.prototype\r\n// 创建一个中间人，这样既可以继承数组原来的方法，也可以自己写新方法\r\nexport let newArrayProto = Object.create(oldArrayProte)\r\n\r\nlet methods = [\r\n  'push',\r\n  'pop',\r\n  'shift',\r\n  'unshift',\r\n  'revers',\r\n  'sort',\r\n  'splice'\r\n]\r\n\r\nmethods.forEach(method => {\r\n  newArrayProto[method] = function (...args) {//重写数组方法\r\n    const result = oldArrayProte[method].call(this, ...args)//内部调用原来的方法\r\n    //对新增的值进行监测\r\n    let inserted\r\n    let ob=this._ob_\r\n    switch(method){\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted=args;//所有参数\r\n        break\r\n      case 'splice':\r\n        inserted=args.slice(2)//截掉前两个的所有参数\r\n        break\r\n      default:\r\n        break  \r\n    }\r\n    if(inserted){\r\n      ob.observeArray(inserted)//因为这些方法的调用者一定是当前数组，我们在observe里已经给他放了监听类\r\n    }\r\n    ob.dep.notify()//数组变化了，通知watcher更新\r\n    return result\r\n  }\r\n  \r\n})","import Dep from \"./dep\"\r\nimport { newArrayProto } from \"./array\"\r\n\r\n// 观测类，用于劫持数据\r\nclass Observe {\r\n  // 构造函数方法\r\n  constructor(data) {\r\n\r\n    //因为对于变量和数组，我们只有在改变整个变量的时候才会引发视图更新，比如a=obj才会引发更新，a.obj.p=10就不会引发更新，所以需要再给每个对象本身而不是指向它的变量增加依赖收集\r\n    this.dep = new Dep()\r\n\r\n    //往当前递归目标的data里放Observe实例，可以在newArrayProto里用，甚至可以作为被监测过的标识，秒，太妙了\r\n    Object.defineProperty(data, '_ob_', {\r\n      value: this,//给data一个ob属性，并且不可枚举，因为可枚举的话，ob里有walk等方法，递归会死循环\r\n      enumerable: false\r\n    })\r\n    // 递归的时候如果是数组那就不要每个数组元素都劫持，进行额外处理\r\n    if (Array.isArray(data)) {\r\n      data.__proto__ = newArrayProto\r\n      this.observeArray(data)\r\n    } else {\r\n      this.walk(data)\r\n    }\r\n  }\r\n  //劫持(因为defineProperty不能知道新加和删除属性，所以劫持需要自己遍历)\r\n  walk(data) {\r\n    // 遍历对象劫持，自己写一个defineReactive方法劫持\r\n    Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n  }\r\n\r\n  //监听数组\r\n  observeArray(data) {\r\n    data.forEach(item => observe(item))\r\n  }\r\n}\r\n\r\n//数组依赖收集\r\nfunction dependArray(value) {\r\n  for (let i = 0; i < value.length; i++) {\r\n    // 如果是数组,对象才依赖收集\r\n    value[i]._ob_ && value[i]._ob_.dep.depend()\r\n    if (Array.isArray(value[i])) {\r\n      dependArray(value[i])\r\n    }\r\n  }\r\n}\r\n\r\n//劫持普通数据和对象\r\nfunction defineReactive(target, key, value) {//get和set能拿到value，存在闭包\r\n  // defineProperty把数据重新定义了，也就是比proxy缺点的地方\r\n  let childOb = observe(value)//如果是对象，那么递归循环劫持，这一步非常秒，太妙了，在observe里刚好有一个判断是否是对象,并且接收\r\n  let dep = new Dep()//每个属性都有一个dep\r\n  Object.defineProperty(target, key, {\r\n    get() {//取\r\n      if (Dep.target) {\r\n        dep.depend();//收集这个watcher，知道他在哪个组件\r\n        if (childOb) {//如果存在那么就说明是对象或者数组\r\n          childOb.dep.depend()//让这个数组，对象本身，而不是指向它的变量直接进行依赖收集\r\n          if (Array.isArray(value)) {//如果是数组，那么要额外处理防止数组里还是数组的情况\r\n            dependArray(value)\r\n          }\r\n        }\r\n      }\r\n      return value\r\n    },\r\n    set(newValue) {//改\r\n      if (newValue === value) {\r\n        return\r\n      }\r\n      observe(newValue)\r\n      value = newValue\r\n      dep.notify()//通知更新\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(data) {\r\n  // null在typeof里是object\r\n  if (typeof data !== 'object' || data == null) {\r\n    return\r\n  }//判断是否是对象，不仅跳过了data，还可以用来递归，牛逼\r\n\r\n  if (data._ob_ instanceof Observe) {//如果有这个标识，那就是被代理过，可以跳过，非常妙啊\r\n    return;\r\n  }\r\n\r\n  return new Observe(data)\r\n}","import Dep, { popTarget, pushTarget } from \"./dep\"\r\n\r\nlet id = 0\r\n//不同组件有不同watcher，所以需要id标识，如果每个组件watcher都一样，那么一个变了，其他也得变\r\nclass Watcher {\r\n  constructor(vm, exprOrFn, options, cb) {\r\n    this.vm = vm\r\n    this.id = id++\r\n    this.renderWatcher = options//判断是不是渲染watcher\r\n    if (typeof exprOrFn === 'string') {\r\n      this.getters = function () {\r\n        return vm[exprOrFn]//去vm找这个名字的函数\r\n      }\r\n    } else {\r\n      this.getters = exprOrFn\r\n    }\r\n    this.cb=cb\r\n    this.user = options.user//是否是用户自己的watch\r\n    this.depsId = new Set()//watcher记录dep，且用于去重\r\n    this.deps = [];//后续实现计算属性和清理工作需要用\r\n    this.lazy = options.lazy//是否立即执行\r\n    this.dirty = this.lazy\r\n    //如果是计算属性这样的懒执行就先不执行\r\n    this.value=this.lazy ? undefined : this.get();\r\n  }\r\n  addDep(dep) {\r\n    let id = dep.id\r\n    //this指向不是dep，是Watcher\r\n    if (!this.depsId.has(id)) {\r\n      this.deps.push(dep)\r\n      this.depsId.add(id)\r\n      dep.addSub(this)\r\n    }\r\n  }\r\n  //懒执行\r\n  evaluate() {\r\n    this.value = this.get()\r\n    this.dirty = false\r\n  }\r\n  get() {\r\n    //当我们创建渲染watcher的时候，我们会把当前渲染的watcher放到Dep.target上，调用render会取值，走到observe的get上,get上就有收集该属性watcher的逻辑\r\n    pushTarget(this)//当前watcher入栈\r\n    let value = this.getters.call(this.vm);//调用getter，及fn，就会去vm取值，如果是计算属性，那么又会因为definedProperty的get进到dep和watcher相关的函数，反正最后就是渲染watcher先入栈，入栈的时候让计算属性名watcher也入栈\r\n    popTarget()//watcher出栈,没有了就变成了null\r\n    return value\r\n  }\r\n  depend() {\r\n    // 让计算属性这样的watcher的dep去绑定渲染watcher，这就是为什么之前用数组存watcher所对应的dep\r\n    let i = this.deps.length\r\n    while (i--) {\r\n      this.deps[i].depend()\r\n    }\r\n  }\r\n  update() {//更新的时候直接重新调用异步更新完成渲染\r\n    if (this.lazy) {\r\n      this.dirty = true\r\n    } else {\r\n      queueWatcher(this)\r\n    }\r\n  }\r\n  run() {//调用get直接实现更新\r\n    let oldValue=this.value\r\n    let newValue=this.get()\r\n    if (this.user) {\r\n      this.cb.call(this.vm,newValue,oldValue)\r\n    }\r\n    \r\n  }\r\n}\r\n\r\nfunction flushSchedulerQueue() {\r\n  let flushQueue = queue.slice(0)//拷贝一份\r\n  queue = []//全部清空，下次其他更新还可以用\r\n  has = {}\r\n  pedding = false\r\n  flushQueue.forEach(qWatcher => qWatcher.run())\r\n}\r\n\r\nlet queue = []//watch更新执行队列\r\nlet has = {}//去重判断,这样的话，一个组件只会在主线程执行完所有js代码执行更新一次\r\nlet pedding = false//人造节流阀\r\nfunction queueWatcher(watcher) {\r\n  if (!has[watcher.id]) {\r\n    queue.push(watcher)\r\n    has[watcher.id] = true\r\n    if (!pedding) {//只能执行一次\r\n      nextTick(flushSchedulerQueue, 0);//把更新任务放到异步微任务队列里去，这样就能实现每次更新就更新最后一次，因为所有同步js都在主线程一次性执行完毕\r\n      pedding = true//锁住\r\n    }\r\n  }\r\n}\r\n\r\nlet callbacks = []\r\nlet waiting = false\r\nfunction flushCallbacks() {\r\n  let cbs = callbacks.slice(0);\r\n  waiting = false\r\n  callbacks = []\r\n  cbs.forEach(cb => cb())\r\n}\r\n// vue的nextTick方法,本质上和上面queueWatcher的原理是一样的，只要明白了消息队列的原理就懂了\r\nexport function nextTick(cb) {\r\n  callbacks.push(cb)\r\n  if (!waiting) {\r\n    timerFunc()\r\n    waiting = true\r\n  }\r\n}\r\n//vue源码其实不是定时器，有几个判断，promise，MutationObserve，ie专享api，setTimeout，哪个兼容就用哪个，俗称优雅降级\r\nlet timerFunc\r\nif (Promise) {\r\n  timerFunc = () => {\r\n    Promise.resolve().then(flushCallbacks)\r\n  }\r\n} else if (MutationObserver) {\r\n  let observe = new MutationObserver(flushCallbacks)\r\n  let textNode = document.createTextNode(1)\r\n  observe.observe(textNode, {\r\n    characterData: true\r\n  })\r\n  timerFunc = () => {\r\n    textNode.textContent = 2\r\n  }\r\n} else if (setImmediate) {\r\n  timerFunc = () => {\r\n    setImmediate(flushCallbacks)\r\n  }\r\n} else {\r\n  timerFunc = () => {\r\n    setTimeout(flushCallbacks, 0);\r\n  }\r\n}\r\n\r\n\r\nexport default Watcher\r\n\r\n\r\n//一个组件有多个属性，n个dep对应可以多个watcher\r\n//一个属性对应在多个组件，一个dep对应可以多个watcher\r\n//dep和watcher多对多\r\n\r\n","import Dep from \"./dep\"\r\nimport { observe } from \"./observe\"\r\nimport Watcher, { nextTick } from './watcher'\r\n\r\nexport function initState(vm) {\r\n  const opts = vm.$options//获取所有用户选项（用户写的东西）\r\n  if (opts.data) {\r\n    initData(vm)//初始化数据处理\r\n  }\r\n  //初始化计算属性\r\n  if (opts.computed) {\r\n    initComputed(vm)\r\n  }\r\n  //初始化watch\r\n  if (opts.watch) {\r\n    initWatch(vm)\r\n  }\r\n}\r\n\r\n// 初始化watch\r\nfunction initWatch(vm) {\r\n  let watch = vm.$options.watch\r\n  for (let key in watch) {\r\n    const handler = watch[key]//字符串，数组，函数,暂不考虑对象\r\n    if (Array.isArray(handler)) {\r\n      for (let i = 0; i < handler.length; i++) {\r\n        createWatcher(vm, key, handler[i])\r\n      }\r\n    } else {\r\n      createWatcher(vm, key, handler)\r\n    }\r\n  }\r\n}\r\n\r\nfunction createWatcher(vm, key, handler) {\r\n  if (typeof handler == 'string') {\r\n    handler = vm[handler]\r\n  }\r\n  return vm.$watch(key, handler)\r\n}\r\n\r\n// 代理vm\r\nfunction proxy(vm, target, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[target][key]\r\n    },\r\n    set(newValue) {\r\n      vm[target][key] = newValue\r\n    }\r\n  })\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data\r\n  //如果是函数式的，就让他执行，且指向this/vm实例\r\n  data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n  //因为数据劫持只劫持了数据，用户通过vm对象无法看到用到，所以在vm里创一个和data一模一样的data，这样就能看到用到了\r\n  vm._data_ = data\r\n\r\n  //数据劫持，响应式实现\r\n  observe(data)\r\n\r\n  //代理vm，因为用户想要获取data数据需要以vm.data.xxx的形式太恶心，所以我们需要把vm.data代理成vm\r\n  for (let key in data) {\r\n    proxy(vm, '_data_', key)\r\n  }\r\n}\r\n\r\n//初始化计算属性\r\nfunction initComputed(vm) {\r\n  const computed = vm.$options.computed\r\n  const watchers = vm._computeWatchers = {}//把计算属性watcher保存到vm里\r\n  for (let key in computed) {\r\n    //函数形式和对象形式的计算属性都能取到\r\n    let userDef = computed[key]\r\n    let fn = typeof userDef === 'function' ? userDef : userDef.get//得到get\r\n    // key名和watcher对应\r\n    watchers[key] = new Watcher(vm, fn, { lazy: true })\r\n    defineComputed(vm, key, userDef)\r\n  }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n  const getter = typeof userDef === 'function' ? userDef : userDef.get//得到get\r\n  const setter = userDef.set || (() => { })//得到set\r\n\r\n  //计算属性其实就是把getter和setter取代defineProperty的get和set\r\n  Object.defineProperty(target, key, {\r\n    get: createComputedGetter(key),\r\n    set: setter\r\n  })\r\n  console.log(getter, setter)\r\n}\r\n\r\n//检测是否执行getter\r\nfunction createComputedGetter(key) {\r\n  return function () {\r\n    const watcher = this._computeWatchers[key]//获取对应属性watcher\r\n    if (watcher.dirty) {\r\n      watcher.evaluate()\r\n    }\r\n    if (Dep.target) {\r\n      watcher.depend()\r\n    }\r\n    return watcher.value\r\n  }\r\n}\r\n\r\n//watch和nextTick\r\nexport function initStateMixin(Vue) {\r\n  //nextTick方法,$nextTick可以让用户直接vm.$nextTick调用\r\n  Vue.prototype.$nextTick = nextTick\r\n\r\n  //watch\r\n  Vue.prototype.$watch = function (exprOrFn, cb) {\r\n    new Watcher(this, exprOrFn, { user: true }, cb)\r\n  }\r\n}\r\n","//专门提供构建虚拟节点\r\nconst isReservedTag = (tag) => {\r\n  return ['a', 'div', 'p', 'span', 'button', 'ul', 'li','h2','h1'].includes(tag)//vue里为了判断是真实标签还是自己创建的标签，逐个比对，这里只写了几个常用的\r\n}\r\n//h() _c()\r\nexport function createElementVCNode(vm, tag, data = {}, ...children) {\r\n  if (data == null) {\r\n    data = {}\r\n  }\r\n  let key = data.key\r\n  if (key) {\r\n    delete data.key\r\n  }\r\n  if (isReservedTag(tag)) {//是否是真实的原始标签\r\n    return vNode(vm, tag, data, key, children, undefined)\r\n  } else {\r\n    //创建一个自定义组件的虚拟节点\r\n    let Ctor = vm.$options.components[tag]//我们存过创造组件的构造函数\r\n    // 这里Ctor可能是Sub类，也可能是一个组建的对象\r\n    return createComponentVnode(vm, tag, key, data, children, Ctor)\r\n  }\r\n\r\n}\r\n\r\nfunction createComponentVnode(vm, tag, key, data, children, Ctor) {\r\n  if (typeof Ctor === 'object') {\r\n    Ctor = vm.$options._base.extend(Ctor)\r\n  }\r\n  data.hook = {\r\n    init(vNode) {\r\n      let instance = vNode.componentInstance = new vNode.componentOptions.Ctor\r\n      \r\n      instance.$mount()\r\n    }\r\n  }\r\n  return vNode(vm, tag, data, key, children, null, {Ctor})\r\n}\r\n\r\n// _v()\r\nexport function createTextVVNode(vm, text) {\r\n  return vNode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n// ast做的是语法的转换，描述语法本身（html，css，js），语法没有的功能不能乱写，虚拟dom是描述dom元素，可以增加自定义元素，描述dom\r\nfunction vNode(vm, tag, data, key, children, text, componentOptions) {\r\n  return {\r\n    vm,\r\n    tag,\r\n    key,\r\n    data,\r\n    children,\r\n    text,\r\n    componentOptions\r\n  }\r\n}\r\n\r\n//判断是不是相同的节点\r\nexport function isSameVNode(Vnode1, Vnode2) {\r\n  return Vnode1.tag === Vnode2.tag && Vnode1.key === Vnode2.key\r\n}","import { isSameVNode } from '.'\r\n\r\nfunction createComponent(vNode) {\r\n  let i = vNode.data\r\n  \r\n  if ((i = i.hook)&&(i = i.init)) {\r\n      i(vNode)    \r\n  }\r\n  if(vNode.componentInstance){\r\n    return true\r\n  }\r\n}\r\n\r\n//递归渲染成真实节点\r\nexport function createElm(vNode) {\r\n  let { tag, data, children, text } = vNode //解构赋值\r\n\r\n  if (typeof tag === 'string') {\r\n    //判断是不是标签\r\n\r\n    if (createComponent(vNode)) {\r\n      return vNode.componentInstance.$el\r\n    }\r\n\r\n    vNode.el = document.createElement(tag) //把虚拟节点和真实节点对应起来，并且挂载到vNode\r\n\r\n    patchProps(vNode.el, {}, data) //处理属性\r\n\r\n    // 孩子节点递归创建挂载\r\n    children.forEach((child) => {\r\n      vNode.el.appendChild(createElm(child))\r\n    })\r\n  } else {\r\n    vNode.el = document.createTextNode(text) //创建文本\r\n  }\r\n  return vNode.el\r\n}\r\n\r\n//处理元素属性\r\nexport function patchProps(el, oldProps = {}, props = {}) {\r\n  // 更新时候删除老的各种属性，新的加进去\r\n  let oldStyles = oldProps.style || {}\r\n  let newStyles = props.style || {}\r\n  for (let key1 in oldStyles) {\r\n    if (!newStyles[key1]) {\r\n      el.style[key1] = ''\r\n    }\r\n  }\r\n  for (let key2 in oldProps) {\r\n    console.log(key2)\r\n    if (!props[key2]) {\r\n      el.removeAttribute(key2)\r\n    }\r\n  }\r\n\r\n  for (let key3 in props) {\r\n    if (key3 === 'style') {\r\n      //处理style的情况，style{color:'red'}\r\n      for (let styleName in props.style) {\r\n        console.log(styleName)\r\n        el.style[styleName] = props.style[styleName]\r\n      }\r\n    } else {\r\n      if(el){\r\n        el.setAttribute(key3, props[key3])\r\n      }\r\n      \r\n    }\r\n  }\r\n}\r\n\r\nexport function patch(oldVNode, vNode) {\r\n\r\n  if(!oldVNode){//组件挂载\r\n    return createElm(vNode)\r\n  }\r\n\r\n  //初渲染\r\n  const isRealElement = oldVNode.nodeType //判断是不是真的元素，还是虚拟dom\r\n  if (isRealElement) {//初次渲染\r\n    const elm = oldVNode //改名\r\n\r\n    const parentEle = elm.parentNode //拿到父元素\r\n\r\n    let newElm = createElm(vNode)\r\n    parentEle.insertBefore(newElm, elm.nextSibling)\r\n    parentEle.removeChild(elm)\r\n\r\n    return newElm\r\n  } else {//修改渲染\r\n    //diff算法\r\n\r\n    //1.两个节点不是同一个节点，直接删除老的换新的\r\n    //2.两个节点是同一个节点（key和tag是相同的），属性是否相同(复用老的属性，添加新的属性)\r\n    //3.比较儿子\r\n    patchVnode(oldVNode, vNode)\r\n  }\r\n\r\n  function patchVnode(oldVNode, vNode) {\r\n    //不相同元素\r\n    if (!isSameVNode(oldVNode, vNode)) {\r\n      let el = createElm(vNode)\r\n      oldVNode.el.parentNode.replaceChild(el, oldVNode.el) //相同，老的换新的\r\n      return el\r\n    }\r\n    //相同元素\r\n    let el = (vNode.el = oldVNode.el) //直接复用老的节点元素\r\n    if (!oldVNode.tag) {\r\n      //文本情况，tag是undefined\r\n      if (oldVNode.text !== vNode.text) {\r\n        el.textContent = vNode.text\r\n      }\r\n    }\r\n    //是标签\r\n    patchProps(el, oldVNode.data, vNode.data)\r\n\r\n    //比较儿子节点\r\n    //1. 有一方没儿子\r\n    //2. 两方都有儿子\r\n    let oldChildren = oldVNode.children || []\r\n    let newChildren = vNode.children || []\r\n    if (oldChildren.length > 0 && newChildren.length > 0) {\r\n      //都有儿子\r\n      updateChildren(el, oldChildren, newChildren)\r\n    } else if (newChildren.length > 0) {\r\n      //老的没儿子，新的有\r\n      mountChildren(el, newChildren)\r\n    } else if (oldChildren.length > 0) {\r\n      el.innerHTML = '' //写的简单了，建议循环\r\n    }\r\n    return el\r\n  }\r\n  function mountChildren(el, newChildren) {\r\n    for (let i = 0; i < newChildren.length; i++) {\r\n      //把子节点循环加进去\r\n      let child = newChildren[i]\r\n      el.appendChild(createElm(child))\r\n    }\r\n  }\r\n\r\n  // diff算法\r\n  function updateChildren(el, oldChildren, newChildren) {\r\n    let oldStartIndex = 0\r\n    let newStartIndex = 0\r\n    let oldEndIndex = oldChildren.length - 1\r\n    let newEndIndex = newChildren.length - 1\r\n\r\n    let oldStartVnode = oldChildren[0]\r\n    let newStartVnode = newChildren[0]\r\n    let oldEndVnode = oldChildren[oldEndIndex]\r\n    let newEndVnode = newChildren[newEndIndex]\r\n\r\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n\r\n      if (isSameVNode(oldStartVnode, newStartVnode)) {//如果两个头孩子相同\r\n        patchVnode(oldStartVnode, newStartVnode)//递归比较子节点\r\n        oldStartVnode = oldChildren[++oldStartIndex]\r\n        newStartVnode = newChildren[++newStartIndex]\r\n      }\r\n\r\n      else if (isSameVNode(oldEndVnode, newEndVnode)) {//如果两个尾孩子相同\r\n        patchVnode(oldEndVnode, newEndVnode)//递归比较子节点\r\n        oldEndVnode = oldChildren[--oldEndIndex]\r\n        newEndVnode = newChildren[--newEndIndex]\r\n      }\r\n\r\n      else if (isSameVNode(oldEndVnode, newStartVnode)) {//如果头头，尾尾都不同，但是新头老尾相同\r\n        patchVnode(oldEndVnode, newStartVnode)//递归比较子节点\r\n        el.insertBefore(oldEndVnode.el, oldStartVnode.el)//把老尾巴移到老头\r\n        oldEndVnode = oldChildren[--oldEndIndex]\r\n        newStartVnode = newChildren[++newStartIndex]\r\n      }\r\n\r\n      else if (isSameVNode(oldStartVnode, newEndVnode)) {//如果头头，尾尾都不同，但是老头新尾相同\r\n        patchVnode(oldStartVnode, newEndVnode)//递归比较子节点\r\n        el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)//把老头移到老尾巴\r\n        oldStartVnode = oldChildren[++oldStartIndex]\r\n        newEndVnode = newChildren[--newEndIndex]\r\n      }\r\n\r\n    }\r\n    //如果此时跳出循环的时候，新元素的节点还有多的，那就说明新的多余老的，要插入.两种情况，后面多和前面多\r\n    if (newStartIndex <= newEndIndex) {\r\n      for (let i = newStartIndex; i <= newEndIndex; i++) {\r\n        let childEl = createElm(newChildren[i])\r\n        let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null\r\n        el.insertBefore(childEl, anchor)//anchor为null的话就是appendChild\r\n      }\r\n    }\r\n    //如果此时跳出循环的时候，老元素的节点还有多的，那就说明新的少余老的，要删老的\r\n    if (oldStartIndex <= oldEndIndex) {\r\n      for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n        let childEl = oldChildren[i].el\r\n        el.removeChild(childEl)\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { createElementVCNode, createTextVVNode } from \"./voom\"\r\nimport Watcher from \"./watcher\";\r\n\r\nimport { patch } from \"./voom/patch\";\r\n\r\nexport function initLifeCycle(Vue) {\r\n  Vue.prototype._update = function (vNode) {\r\n\r\n    const vm = this\r\n    const el = vm.$el\r\n    const prevVnode = vm.vNode = vm._vNode\r\n\r\n    vm._vNode = vNode//第一次产生的虚拟节点保存起来\r\n    //核心，将虚拟dom转换成真实dom，有初始化和更新的功能\r\n\r\n    if (prevVnode) {//有值就不是第一次\r\n      patch(prevVnode,vNode)\r\n    } else {\r\n      vm.$el = patch(el, vNode);//把vNode转换成真实dom替换el,并且保存起来最新的\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  //字符串_c('div',{},...children)这类似的\r\n  Vue.prototype._c = function () {//我们写的render从字符串被转成函数以后会解释成有个_c方法，所以我们要自己写，不然会显示没有这个方法\r\n    return createElementVCNode(this, ...arguments)\r\n  }\r\n\r\n  //_v(text)这样式的\r\n  Vue.prototype._v = function () {//我们写的render从字符串被转成函数以后会解释成有个_v方法，所以我们要自己写，不然会显示没有这个方法\r\n    return createTextVVNode(this, ...arguments)//this就是vm\r\n  }\r\n  Vue.prototype._s = function (value) {//我们写的render从字符串被转成函数以后会解释成有个_s方法，所以我们要自己写，不然会显示没有这个方法\r\n    if (typeof value !== 'object') return value\r\n    return JSON.stringify(value)\r\n  }\r\n\r\n  Vue.prototype._render = function () {\r\n    const vm = this\r\n\r\n    // 因为写render的时候用了with，所以会从实例取值，实例就是vm，这样我们就把实例和视图绑定了\r\n    return vm.$options.render.call(vm)//调用自己写的render函数，指向vm，因为vm有数据\r\n  }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n\r\n\r\n  vm.$el = el\r\n  const updateComponent = () => {\r\n    //1.调用render产生虚拟dom\r\n    //2.根据虚拟dom产生真实dom\r\n    vm._update(vm._render())\r\n  }\r\n  //把初渲染和更新渲染放到观察者里\r\n  const watcher = new Watcher(vm, updateComponent, true)\r\n\r\n  console.log(watcher)\r\n}\r\n\r\n//调用生命周期钩子\r\nexport function callHook(vm, hook) {//实例，周期选项\r\n  const handlers = vm.$options[hook]//我们在init的时候就把所有Vue的options合并到实例\r\n  if (handlers) {//如果此钩子有方法需要调用，就循环调用\r\n    handlers.forEach(handler => handler.call(vm))\r\n  }\r\n}","import { compileToFunction } from \"./compiler\"\r\nimport { initState } from \"./initState\"\r\nimport { mountComponent } from \"./lifecycle\"\r\nimport { mergeOpions } from \"./utils\"\r\n\r\n//vue的初始化功能，匿名函数方式\r\nexport function initMxin(Vue) {\r\n  //在Vue的原型上直接声明init\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this\r\n    vm.$options = mergeOpions(this.constructor.options, options)//把options直接放在Vue实例里，后面方便用\r\n    console.log(vm.$options)\r\n\r\n    // 初始化状态\r\n    initState(vm)\r\n\r\n    //判断用户有没有传el\r\n    if (options.el) {\r\n      vm.$mount(options.el)//数据挂载\r\n    }\r\n  }\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this\r\n    let ops = vm.$options\r\n    el = document.querySelector(el)//el是#app，需要获取一下\r\n    console.log(el)\r\n    if (!ops.rander) {\r\n      let template\r\n      if (!ops.template && el) {//如果用户没有写render和template，那么就用外部的el\r\n        template = el.outerHTML\r\n      } else {\r\n\r\n        template = ops.template\r\n\r\n      }\r\n      //如果经过一轮判断，template有值\r\n      if (template) {\r\n        // 对模板进行编译\r\n        const render = compileToFunction(template);\r\n\r\n        ops.render = render\r\n      }\r\n    }\r\n    \r\n    mountComponent(vm, el)//组件的挂载\r\n  }\r\n}","import { compileToFunction } from './compiler'\r\nimport { initGlobalAPI } from './gloabAPI'\r\nimport { initMxin } from './init'\r\nimport { initStateMixin } from './initState'\r\nimport { initLifeCycle } from './lifecycle'\r\nimport { createElm, patch } from './voom/patch'\r\n\r\n//Vue的构造方法\r\nfunction Vue(options) {//options就是用户写的东西\r\n  //init方法已经在initMixin里通过原型链创建\r\n  this._init(options)\r\n}\r\n\r\n//运行initMxin，这样就在Vue原型创建了一个函数，Vue可以直接用\r\ninitMxin(Vue)\r\n\r\n//渲染虚拟dom变成真实dom和挂载\r\ninitLifeCycle(Vue)\r\n\r\n//mixin\r\ninitGlobalAPI(Vue)\r\n\r\n//watch和nextTick\r\ninitStateMixin(Vue)\r\n\r\n\r\nexport default Vue\r\n\r\n"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagclose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","stack","currentParent","root","createASTElement","tag","attrs","type","children","parent","start","startTagMatch","node","push","texts","text","replace","end","endTagMatch","pop","length","advance","substring","parseStartTag","match","tagName","attr","name","value","textEnd","indexOf","defaultTagRE","genProps","str","_loop","i","obj","split","forEach","item","trim","_item$split","_item$split2","_slicedToArray","key","JSON","stringify","slice","gen","codegen","test","tokens","lastIndex","exec","index","join","genChildren","map","child","ast","code","compileToFunction","template","render","Function","strats","LIFECYCLE","hook","components","parentVal","childVal","res","Object","create","mergeOpions","options","mergeFild","hasOwnProperty","initGlobalAPI","Vue","_base","mixin","extend","Sub","arguments","undefined","_init","prototype","constructor","console","log","component","id","definition","Dep","_classCallCheck","subs","_createClass","depend","target","addDep","addSub","watcher","notify","update","pushTarget","popTarget","oldArrayProte","Array","newArrayProto","methods","method","_oldArrayProte$method","_len","args","_key","result","call","apply","inserted","ob","_ob_","observeArray","dep","Observe","data","defineProperty","enumerable","isArray","__proto__","walk","keys","defineReactive","observe","dependArray","childOb","get","set","newValue","_typeof","Watcher","vm","exprOrFn","cb","renderWatcher","getters","user","depsId","Set","deps","lazy","dirty","has","add","evaluate","queueWatcher","run","oldValue","flushSchedulerQueue","flushQueue","queue","pedding","qWatcher","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","handler","createWatcher","$watch","proxy","_data_","watchers","_computeWatchers","userDef","fn","defineComputed","getter","setter","createComputedGetter","initStateMixin","$nextTick","isReservedTag","includes","createElementVCNode","vNode","Ctor","createComponentVnode","init","instance","componentInstance","componentOptions","$mount","createTextVVNode","isSameVNode","Vnode1","Vnode2","createComponent","createElm","$el","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","key1","key2","removeAttribute","key3","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentEle","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVnode","replaceChild","oldChildren","newChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","childEl","anchor","initLifeCycle","_update","prevVnode","_vNode","_c","_v","_s","_render","mountComponent","updateComponent","initMxin","ops","querySelector","rander","outerHTML"],"mappings":"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"}